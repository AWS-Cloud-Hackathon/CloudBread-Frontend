{"version":3,"file":"MapView-stories.de0b81dabd5eb9390c4b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAUA;AAEA","sources":["webpack://dsc/./src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapView.css';\r\n\r\nconst vehicleData = [\r\n  { \r\n    id: 1, \r\n    position: [37.5665, 126.9780], \r\n    info: '차량 1: 상세 정보', \r\n    time: '2024-08-01 10:00', \r\n    description: '과속 사건',\r\n    path: [[37.5651, 126.9782], [37.5660, 126.9785], [37.5665, 126.9780]] // 차량 이동 경로\r\n  },\r\n  { \r\n    id: 2, \r\n    position: [37.5765, 126.9880], \r\n    info: '차량 2: 상세 정보', \r\n    time: '2024-08-03 11:00', \r\n    description: '사고 다발지역',\r\n    path: [[37.5750, 126.9885], [37.5760, 126.9882], [37.5765, 126.9880]] \r\n  },\r\n  { \r\n    id: 3, \r\n    position: [37.5865, 126.9980], \r\n    info: '차량 3: 상세 정보', \r\n    time: '2024-08-04 12:00', \r\n    description: '사고 다발지역',\r\n    path: [[37.5850, 126.9985], [37.5860, 126.9982], [37.5865, 126.9980]] \r\n  },\r\n];\r\n\r\nconst getCustomIcon = (description: string) => {\r\n  let iconUrl = '/icons/default_icon.png'; \r\n\r\n  if (description.includes('사고 다발지역')) {\r\n    iconUrl = '/icons/accident_icon.png';\r\n  } else if (description.includes('과속 사건')) {\r\n    iconUrl = '/icons/speeding_icon.png';\r\n  } else if (description.includes('주차 위반')) {\r\n    iconUrl = '/icons/parking_violation_icon.png';\r\n  }\r\n\r\n  return new L.Icon({\r\n    iconUrl,\r\n    iconSize: [50, 50],\r\n    iconAnchor: [25, 50], \r\n  });\r\n};\r\n\r\nconst SetViewOnLoad: React.FC<{ coords: L.LatLngExpression, zoom: number }> = ({ coords, zoom }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    map.setView(coords, zoom);\r\n  }, [map, coords, zoom]);\r\n  return null;\r\n};\r\n\r\nconst MapView: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredData, setFilteredData] = useState(vehicleData);\r\n\r\n  const handleSearch = () => {\r\n    if (searchQuery.trim() === '') {\r\n      setFilteredData(vehicleData);\r\n    } else {\r\n      const queryLowerCase = searchQuery.toLowerCase();\r\n      setFilteredData(\r\n        vehicleData.filter((vehicle) =>\r\n          vehicle.info.toLowerCase().includes(queryLowerCase) ||\r\n          vehicle.description.toLowerCase().includes(queryLowerCase) ||\r\n          vehicle.time.includes(queryLowerCase)\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-view-container\">\r\n      <div className=\"map-view-header\">\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"차량 정보, 시간 또는 설명으로 검색\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSearch()} \r\n          />\r\n          <button onClick={handleSearch}>검색</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"map-view-content\">\r\n        <div className=\"map-view-map\">\r\n          <MapContainer style={{ height: \"80vh\", width: \"100%\" }}>\r\n            <SetViewOnLoad coords={filteredData[0].position as L.LatLngExpression} zoom={13} />\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {filteredData.map((vehicle) => (\r\n              <>\r\n                <Polyline \r\n                  key={`path-${vehicle.id}`} \r\n                  positions={vehicle.path as L.LatLngExpression[]} \r\n                  color=\"red\"\r\n                  weight={4}\r\n                  dashArray=\"4 12\" // 점선 설정\r\n                />\r\n                <Marker\r\n                  key={vehicle.id}\r\n                  position={vehicle.position as L.LatLngExpression}\r\n                  icon={getCustomIcon(vehicle.description) as any}\r\n                />\r\n              </>\r\n            ))}\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"map-view-sidebar\">\r\n          <h2>검색 결과</h2>\r\n          <ul className=\"map-view-results\">\r\n            {filteredData.map((vehicle) => (\r\n              <li key={vehicle.id}>\r\n                <strong>{vehicle.info}</strong>\r\n                <p>{vehicle.time}</p>\r\n                <p>{vehicle.description}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"names":[],"sourceRoot":""}