{"version":3,"file":"Report-stories.6d5b671787dc4f0b6b37.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAGA;AAEA","sources":["webpack://dsc/./src/components/Report.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Report.css';\r\n\r\nconst ReportPage: React.FC = () => {\r\n  const [location, setLocation] = useState<{\r\n    latitude: number | null;\r\n    longitude: number | null;\r\n    address: string;\r\n  }>({\r\n    latitude: null,\r\n    longitude: null,\r\n    address: '',\r\n  });\r\n\r\n  const [selectedReportType, setSelectedReportType] = useState<string>('사고');\r\n  const [customReport, setCustomReport] = useState<string>('');\r\n\r\n  const handleGetLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        // 위도와 경도 설정\r\n        setLocation({ latitude, longitude, address: '' });\r\n\r\n        // Nominatim API를 사용하여 도로명 주소를 가져오기\r\n        try {\r\n          const response = await axios.get(`https://nominatim.openstreetmap.org/reverse`, {\r\n            params: {\r\n              lat: latitude,\r\n              lon: longitude,\r\n              format: 'json',\r\n            },\r\n          });\r\n\r\n          const address = response.data.display_name;\r\n          setLocation({ latitude, longitude, address });\r\n        } catch (error) {\r\n          console.error('Error fetching address:', error);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  };\r\n\r\n  const handleReportTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedReportType(event.target.value);\r\n    if (event.target.value !== '기타') {\r\n      setCustomReport(''); // 기타가 아닐 경우 입력 필드를 초기화\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-container\">\r\n      <h1>차량 신고</h1>\r\n      <div className=\"section\">\r\n        <button className=\"get-location-btn\" onClick={handleGetLocation}>\r\n          위치 가져오기\r\n        </button>\r\n        {location.latitude && location.longitude && (\r\n          <p>\r\n            <strong>위치 정보:</strong> 위도: {location.latitude}, 경도: {location.longitude}\r\n          </p>\r\n        )}\r\n        {location.address && (\r\n          <p><strong>도로명 주소:</strong> {location.address}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h2>사진 및 동영상 등록</h2>\r\n        <input type=\"file\" />\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h2>신고 내용</h2>\r\n        <select value={selectedReportType} onChange={handleReportTypeChange}>\r\n          <option value=\"사고\">사고</option>\r\n          <option value=\"과속\">과속</option>\r\n          <option value=\"신호 위반\">신호 위반</option>\r\n          <option value=\"주차 금지\">주차 금지</option>\r\n          <option value=\"기타\">기타</option>\r\n        </select>\r\n        {selectedReportType === '기타' && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"기타 내용을 입력해 주세요.\"\r\n            value={customReport}\r\n            onChange={(e) => setCustomReport(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"submit-btn\">신고하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n"],"names":[],"sourceRoot":""}